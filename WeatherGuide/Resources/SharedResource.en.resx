<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Administration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="AdministrationPage" xml:space="preserve">
    <value>Administration page</value>
  </data>
  <data name="AdministrationRights" xml:space="preserve">
    <value>Administration rights (true/false)</value>
  </data>
  <data name="AdministrationRightsId" xml:space="preserve">
    <value>Administration rights</value>
  </data>
  <data name="Are you sure you want to delete this?" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="CategoryTableVal" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ClothingManagement" xml:space="preserve">
    <value>Clothing management</value>
  </data>
  <data name="ClothingNameEN" xml:space="preserve">
    <value>Clothing name in English</value>
  </data>
  <data name="ClothingNameUA" xml:space="preserve">
    <value>Clothing name in Ukrainian</value>
  </data>
  <data name="Confirm new password" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Create new" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="Current password" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DesignerRights" xml:space="preserve">
    <value>Designer rights (true/false)</value>
  </data>
  <data name="DesignerRightsId" xml:space="preserve">
    <value>Designer rights</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Error during registration, maybe user with such name already exists" xml:space="preserve">
    <value>Error during registration, maybe user with such name already exists</value>
  </data>
  <data name="ExportUsers" xml:space="preserve">
    <value>Exports users</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello,</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="ImgData" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ImportUsers" xml:space="preserve">
    <value>Import users</value>
  </data>
  <data name="Invalid login attempt." xml:space="preserve">
    <value>Invalid login attempt.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="ManageCategories" xml:space="preserve">
    <value>Manage clothing categories</value>
  </data>
  <data name="ManageCountries" xml:space="preserve">
    <value>Manage countries</value>
  </data>
  <data name="ManageCountryStates" xml:space="preserve">
    <value>Manage country states</value>
  </data>
  <data name="ManageMeasurements" xml:space="preserve">
    <value>Manage measurements</value>
  </data>
  <data name="ManageRecommendations" xml:space="preserve">
    <value>Manage recommendations</value>
  </data>
  <data name="ManageUsers" xml:space="preserve">
    <value>Manage users</value>
  </data>
  <data name="MoistureResistance" xml:space="preserve">
    <value>Moisture resistance parameter(0-100)</value>
  </data>
  <data name="MoistureTableVal" xml:space="preserve">
    <value>Moisture resistance</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameId" xml:space="preserve">
    <value>Name (Id)</value>
  </data>
  <data name="New name" xml:space="preserve">
    <value>New name</value>
  </data>
  <data name="New password" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="New surname" xml:space="preserve">
    <value>New surname</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Recommendations" xml:space="preserve">
    <value>Recommendations</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Select category, where 1 - TOP, 2 - BOTTOM, 3 - BOOTS</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="SurnameId" xml:space="preserve">
    <value>Surname (Id)</value>
  </data>
  <data name="test" xml:space="preserve">
    <value>hello</value>
  </data>
  <data name="The field must contain alphabetical characters" xml:space="preserve">
    <value>The field must contain alphabetical characters</value>
  </data>
  <data name="The new password and confirmation password do not match." xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
  <data name="The password and confirmation password do not match." xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="The {0} must be at least {2} and at max {1} characters long." xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
  <data name="Warmth" xml:space="preserve">
    <value>Warmth parameter(0-100)</value>
  </data>
  <data name="WarmthTableVal" xml:space="preserve">
    <value>Warmth</value>
  </data>
  <data name="Your info has been changed successfully." xml:space="preserve">
    <value>Your info has been changed successfully.</value>
  </data>
  <data name="Your info is unchanged." xml:space="preserve">
    <value>Your info is unchanged.</value>
  </data>
  <data name="Your password has been changed." xml:space="preserve">
    <value>Your password has been changed.</value>
  </data>
  <data name="Your profile has been updated" xml:space="preserve">
    <value>Your profile has been updated</value>
  </data>
  <data name="{0} is not valid" xml:space="preserve">
    <value>{0} is not valid</value>
  </data>
  <data name="{0} is required" xml:space="preserve">
    <value>{0} is required</value>
  </data>
</root>